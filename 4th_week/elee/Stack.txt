1. 스택(Stack)
- 데이터를 저장하기 위해 사용되는 데이터 구조
- 삽입과 삭제가 한쪽 끝에서 이뤄지는, 순서가 매겨진 리스트
- 삽입, 삭제가 이뤄지는 끝을 탑(Top)이라고 부른다.
- 제일 마지막에 추가된 항목이 제일 먼저 삭제된다.
- 후입선출(Last In First Out, LIFO) 또는 선입후출(First In Last Out, FILO) 리스트라고 불린다.

2. 스택이 가지는 변화
(1) 푸시(Push) : 스택에 항목이 삽입되는 것
(2) 팝(Pop) : 항목이 스택으로부터 삭제되는 것
(3) 언더플로우(Underflow) : 빈 스택에서 항목을 팝하려는 것
(4) 오버플로우(Overflow) : 가득찬 스택에 항목을 푸시하려는 것
※ 언더플로우와 오버플로우는 일반적으로 예외처리를 한다.

3. 적용 사례
- 괄호 짝맞추기
- 웹 브라우저 방문 페이지 기록 관리
- 함수 호출 구현 (재귀 포함)
- 인픽스(Infix : 일반적인 수식 표기법)를 포스트픽스(Postfix : 연산자를 피연산자의 뒷쪽에 표시하는 표기법)로 변환하기

4. 구현
- 간단한 배열에 기반한 구현 → 스택 크기 최댓값이 미리 정해져 있어야 하며, 바꿀 수 없다. 오버플로우 예외가 발생할 수 있다.
- 동적 배열에 기반한 구현 → 배열 크기를 증가 시키는 비용이 크다. 두 배 확장의 경우, 메모리 오버플로우 예외가 발생할 수 있다.
- 연결 리스트 구현 → 모든 연산에 레퍼런스를 다루기 위한 부가적 공간과 시간이 필요하다.

5. 참고
- 다양한 예제로 학습하는 데이터 구조와 알고리즘