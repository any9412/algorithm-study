버블 정렬

- 서로 인접한 두 원소를 비교하여 정렬하는 알고리즘.

- 오름차순으로 정렬할 경우, 1회전시 가장 큰 수가 맨 뒤로 가게 됨.
  => 1회전 수행할 때 마다 뒤에서부터 하나씩 비교에서 제외

- Ex) 7 4 5 1 3
  1회전: 4 7 5 1 3 -> 4 5 7 1 3 -> 4 5 1 7 3 -> 4 5 1 3 7
  2회전: 4 5 1 3 7 -> 4 1 5 3 7 -> 4 1 3 5 7
  3회전: 1 4 3 5 7 -> 1 3 4 5 7
  4회전: 1 3 4 5 7 => done

- 특징
  1. 구현이 간단
  2. 순서와 관계없이 인접한 요소와 비교 & 교환 반복 => 비효율적
  3. 특정 요소가 최종 정렬 위치에 이미 있더라도 교환되는 경우가 발생
     Ex) 4 2 3 1 5 => 2,3,5는 최종 정렬 위치
         1회전: 2 3 1 4 5 => 2,3이 교환되는 경우가 발생!
  4. 교환이 많이 발생하는 알고리즘으로 구현이 간단함에도 불구하고 자주 사용되지는 않는 알고리즘.

- 시간복잡도
  - 비교 횟수
    (n-1) + (n-2) + ... + 2 + 1 = n(n-1)/2 번
  - 교환 횟수
    - 최악의 경우: 역순으로 정렬되어 있는 경우
      비교 횟수 * 3 = 3n(n-1)/2
    - 최상의 경우: 비교가 발생하지 않음
  - T(n) = O(n^2)

- 결과
  구현은 간단하나 비효율적이다. 이에 비해 퀵정렬, 힙정렬, 합병정렬,
  기수정렬은 효율적이라 할 수 있다.
