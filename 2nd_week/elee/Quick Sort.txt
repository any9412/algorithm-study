1. 퀵 정렬(Quick Sort)
- 분할 정복 알고리즘
- 부분 교환 정렬(Partition Exchange Sort)라고도 불린다.
- 재귀 호출을 사용해 항목들을 정렬한다.
- 비교에 기반한 정렬 알고리즘이다.

- 분할 : 배열 A[low .. high]는 빈 배열이 아닌 두 개의 부속 배열 A[low .. q]와 A[q+1 .. high]로 나뉜다. 이때 A[low .. high]의 각 항목은 A[q+1 .. high]의 각 항목보다 작거나 같다. 인덱스 q는 분할 과정 중에 계산된다.
- 정복 : 두 개의 부속 배열이 퀵 정렬 재귀 호출로 정렬된다.

2. 장점
- 속도가 빠르다.
- 추가 메모리 공간이 필요하지 않다.

3. 단점
- 정렬된 리스트는 불균형 분할에 의해 오히려 수행시간이 더 많이 걸린다.

4. 알고리즘
(1) 배열 안에 정렬할 항목이 1개거나 없다면 반환한다.
(2) 배열 안 한 항목을 기준으로 선택한다. (보통 제일 왼쪽 항목을 사용한다.)
(3) 배열을 기준보다 큰 항목들과 작은 항목인 두 부분으로 나눈다.
(4) 원본 배열의 두 반쪽에 대해 알고리즘을 재귀적으로 반복한다.

5. 코드
/*Quick Sort*/
Quicksort(int a[], int low, int high) {
	int pivot;

	if(high > low) {
		pivot = Partition(A, low, high); // 인덱스 q
		Quicksort(A, low, pivot-1);
		Quicksort(A, pivot-1, high);
	}
}

int Partition(int A, int low, int high) {
	int left, right, pivot_item = A[low];
	left = low;
	right = high;

	while(left < right) {
		while(A[left] <= pivot_item)
			left++;

		while(A[right] > pivot_item)
			right--;

		if(left < right)
			swap(A, low, high);
	}

	A[low] = A[right];
	A[right] = pivot_item;

	return right;
}

6. 시간 복잡도
Worst	O(n^2)
Best	O(nlogn)
Avg	O(nlogn)

7. 참고
- 다양한 예제로 학습하는 데이터 구조와 알고리즘
- [알고리즘] 퀵 정렬(quick sort)이란 (https://gmlwjd9405.github.io/2018/05/10/algorithm-quick-sort.html)