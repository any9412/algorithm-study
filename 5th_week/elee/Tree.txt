1. 트리(Tree)
- 연결 리스트와 유사한 데이터 구조.
- 각 노드가 여러 개의 노드를 가리킨다.
- 비선형적 데이터 구조.
- 트리 ADT(Abstract Data Type, 추상 데이터형)에서 항목 순서는 중요하지 않다.

2. 트리의 용어
- 뿌리(root) : 부모가 없는 노드. 트리에는 최대 한 개의 뿌리 노드가 있을 수 있다.
- 간선(edge) : 부모로부터 자식에게 이어지는 연결 선.
- 잎(leaf) 노드 : 자식이 없는 노드.
- 형제(siblings) 노드 : 같은 부모를 가진 자식 노드들.
- 조상(ancestor) 노드 : 뿌리 노드로부터 노드 q에 이르는 경로에 노드 p가 있을 때, 노드 p를 노드 q의 조상 노드라고 한다.
- 자손(descendant) 노드 : 뿌리 노드로부터 노드 q에 이르는 경로에 노드 p가 있을 때, 노드 q를 노드 p의 자손 노드라고 한다.
- 깊이(depth) : 뿌리로부터 그 노드까지의 경로 길이.
- 레벨(level) : 주어진 깊이의 모든 노드의 집합. 뿌리 노드는 레벨 0에 있다.
- 높이(height) : 그 노드로부터 가장 깊은 노드까지의 경로의 길이. 트리의 높이는 뿌리로부터 가장 깊은 노드까지의 경로의 길이, 즉 모든 노드의 높이 중 최대값이다. 주어진 트리에 대해 높이와 깊이는 같은 값을 가지지만, 각 노드에서의 값은 다를 수 있다.
- 크기(size) : 자기 자신을 포함해 그 노드가 가진 자손의 수.
- 경사(skew) 트리 : 잎 노드를 제외한 트리의 모든 노드가 오직 한 개의 자식만을 가지는 트리.

3. 이진 트리
- 각 노드가 자식이 없거나, 한 개 혹은 두 개의 자식을 가지는 경우를 말한다.
- 빈 트리 역시 유효한 이진 트리다.
- 뿌리와 왼쪽 부속 트리, 오른쪽 부속 트리라고 불리는 두 개의 분리된 이진 트리로 구성되어 있다.

4. 이진 트리의 종류
(1) 엄격한(Strict) 이진 트리 : 모든 노드가 두 개의 자식을 갖거나 자식이 없는 트리.
[예시]
			[1]
	[3]				[4]
				[2]		[5]

(2) 포화(Full) 이진 트리 : 모든 노드가 두 개의 자식을 갖고 잎 노드가 같은 레벨에 있는 트리.
[예시]
			[1]
	[2]				[3]
[4]		[5]		[6]		[7]

(3) 완전(Complete) 이진 트리 : 모든 잎 노드가 높이 h나 h - 1에 있고 순열에서 빠진 숫자가 없는 트리.
[예시]
			[1]
	[2]				[3]
[4]		[5]

5. 이진 트리 탐색
- 트리의 모든 노드를 방문하는 과정.
- 각 노드는 오직 한 번씩 처리 되지만, 한 번 이상 방문될 수도 있다.
- 검색과의 차이 : 탐색의 목적은 특정한 순서로 트리 안을 움직이는 것이다. 또한 탐색에서는 모든 노드가 처리되지만, 검색은 찾는 노드를 발견하면 멈춘다.

(1) 전위(Preorder) 탐색(DLR)
- 뿌리를 방문한다. → 전위 탐색으로 왼쪽 부속 트리를 탐색한다. → 전위 탐색으로 오른쪽 부속 트리를 탐색한다.
- 시간 복잡도 : O(n)
- 공간 복잡도 : O(n)

(2) 중위(Inorder) 탐색(LDR)
- 왼쪽 부속 트리를 중위 탐색으로 탐색한다. → 뿌리 노드를 방문한다. → 오른쪽 부속 트리를 중위 탐색으로 탐색한다.
- 시간 복잡도 : O(n)
- 공간 복잡도 : O(n)

(3) 후위(Postorder) 탐색(LRD)
- 왼쪽 부속 트리를 후위 탐색으로 탐색한다. → 오른쪽 부속 트리를 후위 탐색으로 탐색한다. → 뿌리 노드를 방문한다.
- 시간 복잡도 : O(n)
- 공간 복잡도 : O(n)

(4) 레벨 순서 탐색
- 뿌리 노드를 방문한다. → 레벨 l을 방문하는 동안 레벨 l + 1의 모든 항목을 큐에 저장한다. → 다음 레벨로 가 그 레벨의 모든 노드를 방문한다. → 모든 레벨이 끝날 때까지 반복한다.
- 시간 복잡도 : O(n)
- 공간 복잡도 : O(n)

6. 참고
- 다양한 예제로 학습하는 데이터 구조와 알고리즘